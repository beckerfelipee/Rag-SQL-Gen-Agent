import sys
import os

# Add the Code directory to the Python path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../Code')))

import sqlite3
from Code.functions import write_query, db_extract
from langchain_community.chat_models import ChatOllama
from langchain_community.utilities import SQLDatabase
import Code.config as cfg
from dotenv import load_dotenv

# Connect to the Sakila database

load_dotenv()
db = SQLDatabase.from_uri(f"sqlite:///{cfg.DB_PATH}")

#db_path = "DB/sakila.db"
#connection = sqlite3.connect(db_path)
#cursor = connection.cursor()

# Define a list of questions to test
questions = [
    "List all customers.",
    "What are the top 5 films by rental rate?",
    "How many actors are in the database?",
    "Show the inventory details for the film 'ACADEMY DINOSAUR'.",
    "Which stores have the most staff members?",
    "List all films in the 'Action' category.",
    "What is the total revenue generated by rentals?",
    "Show the rental history of customer with ID 1.",
    "Which films are currently available for rent?",
    "List all cities where the stores are located."
]

# Initialize the actual LLM
llm = ChatOllama(model=cfg.LLM_MODEL, temperature=cfg.LLM_TEMPERATURE)
context_tables = db_extract(db)

# Test each question
for question in questions:
    print(f"Testing question: {question}")

    # Generate the query using the actual LLM
    result = write_query(question = question, llm = llm, context_tables = context_tables)
    query = result.get("query")

    # Execute the query
    try:
        cursor.execute(query)
        rows = cursor.fetchall()
        print(f"Query executed successfully. Results: {rows[:5]} (showing up to 5 rows)")
    except Exception as e:
        print(f"Error executing query: {e}")

# Close the database connection
connection.close()
