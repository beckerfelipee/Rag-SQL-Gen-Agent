import atexit

from vectorize_database import get_vector_collection, EMBEDDING_MODEL
from ollama_management import start_ollama, is_ollama_running, terminate_ollama_processes

EMBEDDING_TOP_K = 10
DISTANCE_THRESHOLD = 1.3 # Threshold for filtering results based on best distance
DISTANCE_CUTOFF = 0.5 # Cutoff for filtering results based on distance

# --- Functions --- #

def query_collection(prompt: str, top_k: int = EMBEDDING_TOP_K):
    """Query the vector database based on a user prompt."""
    collection = get_vector_collection()
    print("Querying the collection...")
    results = collection.query(query_texts=[prompt], n_results=top_k) if collection.count() > 0 else None

    if results:
        distances = results["distances"][0]
        print(distances)

        best_distance = min(distances)
        threshold = best_distance * DISTANCE_THRESHOLD
        
        # Criar uma máscara de índices que atendem ao critério
        filtered_indices = [i for i, distance in enumerate(distances) if distance <= threshold and distance <= DISTANCE_CUTOFF]
        
        # Aplicar a filtragem de uma vez só
        return {
            "ids": [results["ids"][0][i] for i in filtered_indices],
            "documents": [results["documents"][0][i] for i in filtered_indices],
            "distances": [results["distances"][0][i] for i in filtered_indices]
        }
    else:
        return None
        

# --- Script --- #

if __name__ == "__main__":
    atexit.register(terminate_ollama_processes)
    if not is_ollama_running():
        start_ollama()

    questions = [
        "How many actors are there in the database?", # 0
        "What is the name of the actor with ID 1?", # 1
        "List all movies released in 2006.", # 2
        "Who directed the movie 'The Godfather'?", # 3
        "What is the average rental rate for movies?", # 4
        "How many customers are there in the database?", #5
        "List all movies with a rating higher than 4.5.", #6
        "What is the total revenue generated by all movies?", #7
        "Who are the top 5 actors with the most movies?", #8
        "List all movies released after 2010.", #9
        "What are the top 3 actors from the top 3 most rented movie categories?" #10
    ]
    
    result = query_collection(questions[10])
    if result:
        print("Query Results:")
        for i in range(len(result["ids"])):
            print(f"\nID: {result['ids'][i]}, Distance: {result['distances'][i]}, \nDocument: {result['documents'][i]}\n")
    else:
        print("No results found in the vector collection.")


